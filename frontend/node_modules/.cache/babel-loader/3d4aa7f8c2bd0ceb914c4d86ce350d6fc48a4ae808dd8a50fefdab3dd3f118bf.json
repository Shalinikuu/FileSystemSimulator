{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shalini Kushwaha\\\\FileSystemSimulator\\\\frontend\\\\src\\\\components\\\\FileExplorer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { fileSystemService, authService } from '../api';\nimport { FaFolder, FaFile, FaArrowUp, FaTrash, FaEdit, FaPen, FaSave, FaMicrophone, FaCheck, FaSun, FaMoon, FaTerminal } from 'react-icons/fa';\nimport './FileExplorer.css';\nimport Terminal from './Terminal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileExplorer = () => {\n  _s();\n  var _files$find;\n  const [files, setFiles] = useState([]);\n  const [currentDir, setCurrentDir] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [showCreateFolder, setShowCreateFolder] = useState(false);\n  const [showCreateFile, setShowCreateFile] = useState(false);\n  const [newFolderName, setNewFolderName] = useState('');\n  const [newFileName, setNewFileName] = useState('');\n  const [newFileContent, setNewFileContent] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n  const [editMode, setEditMode] = useState(false);\n  const [voiceActive, setVoiceActive] = useState(false);\n  const [voiceText, setVoiceText] = useState('');\n  const [recognitionInterval, setRecognitionInterval] = useState(null);\n  const [successNotification, setSuccessNotification] = useState(null);\n  const [darkMode, setDarkMode] = useState(false);\n  const [itemToRename, setItemToRename] = useState(null);\n  const [newItemName, setNewItemName] = useState('');\n  const [showTerminal, setShowTerminal] = useState(false);\n  const navigate = useNavigate();\n  const handleLogout = () => {\n    try {\n      console.log('Logging out...');\n      // First clear the auth data\n      authService.logout();\n      console.log('Auth data cleared');\n\n      // Force navigation to login page and reload to reset state\n      console.log('Redirecting to login page');\n      window.location.href = '/';\n    } catch (err) {\n      console.error('Logout error:', err);\n      // Fallback navigation\n      navigate('/');\n    }\n  };\n  const fetchFiles = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError('');\n\n      // Set a timeout to prevent being stuck in loading state forever\n      const timeoutId = setTimeout(() => {\n        console.log('Fetch files timeout reached, forcing loading to false');\n        setLoading(false);\n        setError('Request timed out. Please try again.');\n      }, 10000); // 10 second timeout\n\n      // Fetch current directory first\n      console.log('Fetching current directory...');\n      const dirResponse = await fileSystemService.getCurrentDirectory();\n      console.log('Current directory response:', dirResponse);\n      if (dirResponse.data) {\n        setCurrentDir(dirResponse.data);\n        console.log('Current directory set to:', dirResponse.data);\n      } else {\n        console.warn('Unexpected current directory response format:', dirResponse);\n      }\n\n      // Then fetch files in that directory\n      console.log('Fetching files in directory...');\n      const response = await fileSystemService.listFiles();\n      console.log('List files raw response:', response);\n\n      // Clear the timeout since we got a response\n      clearTimeout(timeoutId);\n\n      // Check if the response has an items property\n      if (response.data && response.data.items) {\n        console.log('Files list received:', response.data.items);\n        setFiles(response.data.items);\n      } else {\n        // Try to parse the response if it's a string\n        try {\n          if (typeof response.data === 'string') {\n            const parsedData = JSON.parse(response.data);\n            if (parsedData.items) {\n              console.log('Files list parsed from string:', parsedData.items);\n              setFiles(parsedData.items);\n              return;\n            }\n          }\n        } catch (parseErr) {\n          console.error('Failed to parse response data:', parseErr);\n        }\n\n        // Handle the case when the response doesn't have the expected format\n        console.error('Unexpected response format:', response.data);\n        setFiles([]);\n        setError('Unexpected response format from server');\n      }\n    } catch (err) {\n      var _err$response, _err$response2;\n      console.error('Error fetching files:', err);\n      setError('Failed to load files: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message));\n      if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401) {\n        // Handle unauthorized by redirecting to login\n        console.warn('Unauthorized access detected, redirecting to login');\n        authService.logout();\n        navigate('/');\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [navigate]);\n  useEffect(() => {\n    // Check if user is authenticated before trying to fetch files\n    if (!authService.isAuthenticated()) {\n      console.log('User not authenticated, redirecting to login');\n      navigate('/');\n      return;\n    }\n    fetchFiles();\n\n    // Set up initial theme based on local storage\n    const savedTheme = localStorage.getItem('darkMode');\n    if (savedTheme === 'true') {\n      setDarkMode(true);\n      document.body.classList.add('dark-mode');\n    }\n  }, [fetchFiles, navigate]);\n\n  // Separate useEffect for welcome notification to prevent it from showing on every render\n  useEffect(() => {\n    // Show welcome notification only on initial load\n    const hasShownWelcome = sessionStorage.getItem('welcomeShown');\n    if (!hasShownWelcome) {\n      setTimeout(() => {\n        setSuccessNotification(\"Welcome to File System Simulator!\");\n        setTimeout(() => setSuccessNotification(null), 5000);\n        sessionStorage.setItem('welcomeShown', 'true');\n      }, 1000);\n    }\n  }, []);\n  const handleStartVoiceCommand = async () => {\n    try {\n      setError('');\n\n      // If already listening, stop the voice command\n      if (voiceActive) {\n        console.log('Stopping voice command...');\n\n        // Call the stop endpoint\n        try {\n          await fileSystemService.stopVoiceCommand();\n          console.log('Voice command stopped via API');\n        } catch (err) {\n          console.error('Error stopping voice command:', err);\n        }\n        setVoiceActive(false);\n        setVoiceText('Voice command stopped');\n\n        // Clear any existing polling interval\n        if (recognitionInterval) {\n          console.log('Clearing polling interval');\n          clearInterval(recognitionInterval);\n          setRecognitionInterval(null);\n        }\n\n        // Clear voice text after a delay\n        setTimeout(() => {\n          setVoiceText('');\n        }, 2000);\n        return;\n      }\n\n      // Start new voice command session\n      setVoiceActive(true);\n      setVoiceText('Listening...');\n\n      // Start voice command on backend\n      console.log('Initiating voice command on backend...');\n      const response = await fileSystemService.startVoiceCommand();\n      console.log('Voice command response:', response);\n\n      // Poll for voice recognition updates\n      console.log('Setting up polling for voice status updates...');\n      const interval = setInterval(async () => {\n        try {\n          // Only continue polling if still in voice active mode\n          if (!voiceActive) {\n            console.log('Voice recognition no longer active, stopping polling');\n            clearInterval(interval);\n            setRecognitionInterval(null);\n            return;\n          }\n          console.log('Polling for voice status...');\n          const voiceStatusResponse = await fileSystemService.getVoiceStatus();\n          console.log('Voice status response:', voiceStatusResponse.data);\n          if (voiceStatusResponse.data && voiceStatusResponse.data.text) {\n            const currentStatus = voiceStatusResponse.data.text;\n\n            // Debug the exact status received\n            console.log('RECEIVED STATUS TEXT:', JSON.stringify(currentStatus));\n\n            // PRIORITY 1: Check for special formatted messages first (exact match format)\n            if (currentStatus.startsWith('FOLDER_CREATED_') || currentStatus.startsWith('FILE_CREATED_') || currentStatus.startsWith('RENAME_SUCCESS_')) {\n              let actionType = 'unknown';\n              let itemName = '';\n              let displayMessage = '';\n              if (currentStatus.startsWith('FOLDER_CREATED_')) {\n                actionType = 'folder-create';\n                itemName = currentStatus.replace('FOLDER_CREATED_', '');\n                displayMessage = `Folder \"${itemName}\" created successfully!`;\n              } else if (currentStatus.startsWith('FILE_CREATED_')) {\n                actionType = 'file-create';\n                itemName = currentStatus.replace('FILE_CREATED_', '');\n                displayMessage = `File \"${itemName}\" created successfully!`;\n              } else if (currentStatus.startsWith('RENAME_SUCCESS_')) {\n                actionType = 'rename';\n                // Format is RENAME_SUCCESS_oldname_TO_newname\n                const renameParts = currentStatus.replace('RENAME_SUCCESS_', '').split('_TO_');\n                if (renameParts.length === 2) {\n                  displayMessage = `\"${renameParts[0]}\" renamed to \"${renameParts[1]}\" successfully!`;\n                } else {\n                  displayMessage = \"Item renamed successfully!\";\n                }\n              }\n\n              // Use actionType for analytics or logging purposes\n              console.log('SUCCESS DETECTED - SPECIAL FORMAT:', displayMessage, 'Action type:', actionType);\n\n              // Force refresh files\n              await fetchFiles();\n\n              // Set success notification with formatted message\n              setSuccessNotification(displayMessage);\n              setTimeout(() => setSuccessNotification(null), 6000);\n            }\n            // PRIORITY 2: Standard format success messages\n            else if (currentStatus.includes('SUCCESS') || currentStatus.includes('success') || currentStatus.includes('Folder created') || currentStatus.includes('File created')) {\n              console.log('SUCCESS DETECTED - STANDARD FORMAT:', currentStatus);\n\n              // Force refresh files\n              await fetchFiles();\n\n              // Set success notification with the exact message\n              setSuccessNotification(currentStatus);\n              setTimeout(() => setSuccessNotification(null), 6000);\n            }\n\n            // Always update the voice text display\n            setVoiceText(currentStatus);\n\n            // If the command is completed, restart voice recognition\n            if (voiceStatusResponse.data.completed) {\n              console.log('Voice command completed, starting a new listening session');\n              await fileSystemService.startVoiceCommand();\n            }\n          }\n        } catch (err) {\n          console.error('Error getting voice status:', err);\n        }\n      }, 300); // Poll frequently for better responsiveness\n\n      setRecognitionInterval(interval);\n    } catch (err) {\n      console.error('Failed to start voice command:', err);\n      setError('Failed to start voice command');\n      setVoiceActive(false);\n      setVoiceText('');\n    }\n  };\n\n  // Clean up interval on component unmount\n  useEffect(() => {\n    return () => {\n      if (recognitionInterval) {\n        clearInterval(recognitionInterval);\n      }\n    };\n  }, [recognitionInterval]);\n  const handleNavigate = async path => {\n    try {\n      console.log('Navigating to:', path);\n      const response = await fileSystemService.changeDirectory(path);\n      console.log('Navigation response:', response);\n\n      // Reset file state\n      setSelectedFile(null);\n      setFileContent('');\n      setEditMode(false);\n\n      // Refresh the file list\n      await fetchFiles();\n    } catch (err) {\n      var _err$response3;\n      console.error(`Failed to navigate to ${path}:`, err);\n      setError(`Failed to navigate to ${path}: ${((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data) || err.message}`);\n    }\n  };\n  const handleNavigateUp = async () => {\n    try {\n      console.log('Navigating up...');\n      const response = await fileSystemService.moveUpDirectory();\n      console.log('Navigate up response:', response);\n\n      // Reset file state\n      setSelectedFile(null);\n      setFileContent('');\n      setEditMode(false);\n\n      // Refresh the file list\n      await fetchFiles();\n    } catch (err) {\n      var _err$response4;\n      console.error('Failed to navigate up:', err);\n      setError(`Failed to navigate up: ${((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.data) || err.message}`);\n    }\n  };\n  const handleCreateFolder = async () => {\n    if (!newFolderName.trim()) {\n      setError('Folder name cannot be empty');\n      return;\n    }\n    try {\n      setError('');\n      console.log('Creating folder:', newFolderName);\n      const response = await fileSystemService.createDirectory(newFolderName);\n      console.log('Create folder response:', response);\n      setNewFolderName('');\n      setShowCreateFolder(false);\n\n      // Refresh the file list\n      await fetchFiles();\n    } catch (err) {\n      var _err$response5;\n      console.error('Failed to create folder:', err);\n      setError('Failed to create folder: ' + (((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : _err$response5.data) || err.message));\n    }\n  };\n  const handleCreateFile = async () => {\n    if (!newFileName.trim()) {\n      setError('File name cannot be empty');\n      return;\n    }\n    try {\n      setError('');\n      console.log('Creating file:', newFileName, 'with content:', newFileContent);\n      const response = await fileSystemService.createFile(newFileName, newFileContent);\n      console.log('Create file response:', response);\n      setNewFileName('');\n      setNewFileContent('');\n      setShowCreateFile(false);\n\n      // Refresh the file list\n      await fetchFiles();\n    } catch (err) {\n      var _err$response6;\n      console.error('Failed to create file:', err);\n      setError('Failed to create file: ' + (((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : _err$response6.data) || err.message));\n    }\n  };\n  const handleDeleteItem = async (name, isDirectory) => {\n    try {\n      if (isDirectory) {\n        console.log('Deleting directory:', name);\n        const response = await fileSystemService.deleteDirectory(name);\n        console.log('Delete directory response:', response);\n      } else {\n        console.log('Deleting file:', name);\n        const response = await fileSystemService.deleteFile(name);\n        console.log('Delete file response:', response);\n      }\n\n      // Refresh the file list\n      await fetchFiles();\n      if (selectedFile === name) {\n        setSelectedFile(null);\n        setFileContent('');\n        setEditMode(false);\n      }\n    } catch (err) {\n      var _err$response7;\n      console.error(`Failed to delete ${isDirectory ? 'folder' : 'file'}:`, err);\n      setError(`Failed to delete ${isDirectory ? 'folder' : 'file'}: ${((_err$response7 = err.response) === null || _err$response7 === void 0 ? void 0 : _err$response7.data) || err.message}`);\n    }\n  };\n  const handleFileClick = async fileName => {\n    try {\n      setError('');\n      console.log('Reading file:', fileName);\n      setSelectedFile(fileName);\n      setEditMode(false);\n      const response = await fileSystemService.readFile(fileName);\n      console.log('Read file response status:', response.status);\n      setFileContent(response.data);\n    } catch (err) {\n      var _err$response8;\n      console.error('Failed to read file:', err);\n      setError('Failed to read file: ' + (((_err$response8 = err.response) === null || _err$response8 === void 0 ? void 0 : _err$response8.data) || err.message));\n      setFileContent('');\n    }\n  };\n  const handleSaveFile = async () => {\n    try {\n      setError('');\n      console.log('Saving file:', selectedFile);\n      const response = await fileSystemService.editFile(selectedFile, fileContent);\n      console.log('Save file response:', response);\n      setEditMode(false);\n\n      // Optionally refresh the file list after saving\n      await fetchFiles();\n    } catch (err) {\n      var _err$response9;\n      console.error('Failed to save file:', err);\n      setError('Failed to save file: ' + (((_err$response9 = err.response) === null || _err$response9 === void 0 ? void 0 : _err$response9.data) || err.message));\n    }\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(prevMode => {\n      const newMode = !prevMode;\n      localStorage.setItem('darkMode', newMode);\n      if (newMode) {\n        document.body.classList.add('dark-mode');\n      } else {\n        document.body.classList.remove('dark-mode');\n      }\n      return newMode;\n    });\n  };\n  const toggleTerminal = () => {\n    setShowTerminal(!showTerminal);\n    // If terminal is being shown, ensure it's visible\n    if (!showTerminal) {\n      const terminalWrapper = document.querySelector('.terminal-wrapper');\n      if (terminalWrapper) {\n        terminalWrapper.style.display = 'block';\n      }\n    }\n  };\n\n  // Enhanced function to specifically handle voice commands\n  // This function is defined for future expansion of voice command features\n  // and can be called from handleStartVoiceCommand as needed\n  // eslint-disable-next-line no-unused-vars\n  const processVoiceCommandStatus = async status => {\n    console.log('Processing voice command status:', status);\n\n    // Explicit check for SUCCESS messages (case insensitive)\n    if (status.includes('SUCCESS') || status.includes('success')) {\n      console.log('SUCCESS DETECTED - Setting notification:', status);\n      setSuccessNotification(status);\n      setTimeout(() => setSuccessNotification(null), 8000); // longer display\n      await fetchFiles();\n      return true;\n    }\n\n    // Check for creation/action commands\n    if (status.includes('created') || status.includes('deleted') || status.includes('opened') || status.includes('navigated')) {\n      console.log('ACTION DETECTED IN VOICE COMMAND:', status);\n\n      // Show success notification\n      setSuccessNotification(status);\n      setTimeout(() => setSuccessNotification(null), 5000);\n\n      // Refresh files to show changes\n      await fetchFiles();\n      return true;\n    }\n    return false;\n  };\n\n  // Add a more robust useEffect to handle success notifications\n  useEffect(() => {\n    if (successNotification) {\n      console.log('SUCCESS NOTIFICATION SET TO:', successNotification);\n\n      // Keep only one notification active at a time - clear any existing timeouts\n      if (window.successNotificationTimeout) {\n        console.log('Clearing existing timeout');\n        clearTimeout(window.successNotificationTimeout);\n      }\n\n      // Store the new timeout for later reference\n      window.successNotificationTimeout = setTimeout(() => {\n        console.log('Success notification timeout fired, clearing notification');\n        setSuccessNotification(null);\n      }, 8000); // Increased to 8 seconds for better visibility\n\n      // Check if the notification element exists\n      setTimeout(() => {\n        const notificationElement = document.querySelector('.success-notification');\n        if (notificationElement) {\n          console.log('Success notification found in DOM:', notificationElement);\n        } else {\n          console.error('SUCCESS NOTIFICATION NOT FOUND IN DOM!');\n        }\n      }, 100); // Short delay to check after render\n    } else {\n      console.log('Success notification cleared');\n    }\n\n    // Cleanup on unmount\n    return () => {\n      if (window.successNotificationTimeout) {\n        clearTimeout(window.successNotificationTimeout);\n      }\n    };\n  }, [successNotification]);\n\n  // Set notification function for testing from console\n  useEffect(() => {\n    // Expose a function to test setting notifications from the console\n    window.testNotification = message => {\n      console.log(`Setting test notification: ${message}`);\n      setSuccessNotification(message);\n      setTimeout(() => setSuccessNotification(null), 5000);\n    };\n    return () => {\n      delete window.testNotification;\n    };\n  }, []);\n  const handleRenameItem = async () => {\n    if (!itemToRename || !newItemName.trim()) {\n      return;\n    }\n    try {\n      setError('');\n      console.log(`Renaming ${itemToRename} to ${newItemName}`);\n\n      // Call the API to rename the item\n      const response = await fileSystemService.renameItem(itemToRename, newItemName);\n      console.log('Rename response:', response);\n\n      // Set success notification\n      setSuccessNotification(`Renamed ${itemToRename} to ${newItemName} successfully`);\n      setTimeout(() => setSuccessNotification(null), 5000);\n\n      // Reset state\n      setItemToRename(null);\n      setNewItemName('');\n\n      // Refresh the file list\n      await fetchFiles();\n    } catch (err) {\n      var _err$response10;\n      console.error('Error renaming item:', err);\n      setError('Failed to rename item: ' + (((_err$response10 = err.response) === null || _err$response10 === void 0 ? void 0 : _err$response10.data) || err.message));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [successNotification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-notification\",\n      children: [/*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 11\n      }, this), \" \", successNotification]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `file-explorer ${darkMode ? 'dark-mode' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"explorer-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"File System Explorer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"theme-toggle-btn\",\n            onClick: toggleDarkMode,\n            title: darkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\",\n            children: darkMode ? /*#__PURE__*/_jsxDEV(FaSun, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 27\n            }, this) : /*#__PURE__*/_jsxDEV(FaMoon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-btn\",\n            onClick: toggleTerminal,\n            title: \"Open Terminal\",\n            children: [/*#__PURE__*/_jsxDEV(FaTerminal, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 15\n            }, this), \" Terminal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStartVoiceCommand,\n            className: `action-btn ${voiceActive ? 'active' : ''}`,\n            title: voiceActive ? \"Stop Voice Command\" : \"Start Voice Command\",\n            children: [/*#__PURE__*/_jsxDEV(FaMicrophone, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 15\n            }, this), \" \", voiceActive ? 'Stop' : 'Voice']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            className: \"action-btn\",\n            title: \"Logout\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 19\n      }, this), voiceText && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"voice-text-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `voice-text ${voiceText.includes(\"Listening\") ? \"listening\" : voiceText.includes(\"Recognized:\") ? \"recognized\" : voiceText.includes(\"ERROR\") || voiceText.includes(\"Failed\") || voiceText.includes(\"Error\") ? \"error\" : voiceText.includes(\"SUCCESS\") || voiceText.includes(\"created\") || voiceText.includes(\"Navigated\") || voiceText.includes(\"Deleted\") ? \"success\" : voiceText.includes(\"Processing\") ? \"processing\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(FaMicrophone, {\n            className: \"voice-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 15\n          }, this), \" \", voiceText]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"path-navigation\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-path\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Current Path:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 13\n          }, this), \" \", currentDir]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"explorer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-btn\",\n              onClick: () => handleNavigateUp(),\n              children: [/*#__PURE__*/_jsxDEV(FaArrowUp, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 17\n              }, this), \" Up\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-btn\",\n              onClick: () => setShowCreateFolder(true),\n              children: [/*#__PURE__*/_jsxDEV(FaFolder, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 17\n              }, this), \" New Folder\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-btn\",\n              onClick: () => setShowCreateFile(true),\n              children: [/*#__PURE__*/_jsxDEV(FaFile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 665,\n                columnNumber: 17\n              }, this), \" New File\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 15\n          }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 15\n          }, this) : files.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-message\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-illustration\",\n              children: /*#__PURE__*/_jsxDEV(FaFolder, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 676,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"empty-title\",\n              children: \"This folder is empty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"empty-subtitle\",\n              children: \"Start by creating a new file or folder to organize your content. You can also use voice commands or the terminal for advanced operations.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"empty-action-btn\",\n                onClick: () => setShowCreateFolder(true),\n                children: [/*#__PURE__*/_jsxDEV(FaFolder, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 685,\n                  columnNumber: 21\n                }, this), \" New Folder\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 684,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"empty-action-btn\",\n                onClick: () => setShowCreateFile(true),\n                children: [/*#__PURE__*/_jsxDEV(FaFile, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 688,\n                  columnNumber: 21\n                }, this), \" New File\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `file-item ${selectedFile === file.name ? 'selected' : ''}`,\n              onClick: () => file.type === 'directory' ? handleNavigate(file.name) : handleFileClick(file.name),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-name\",\n                children: [file.type === 'directory' ? /*#__PURE__*/_jsxDEV(FaFolder, {\n                  className: \"icon folder\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 702,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(FaFile, {\n                  className: \"icon file\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 704,\n                  columnNumber: 25\n                }, this), file.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 700,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"file-action-btn rename\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    setItemToRename(file.name);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FaPen, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 716,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 709,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"file-action-btn delete\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleDeleteItem(file.name, file.type === 'directory');\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 725,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 718,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 708,\n                columnNumber: 21\n              }, this)]\n            }, file.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [selectedFile, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-preview-actions\",\n              children: [!editMode && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit-btn\",\n                onClick: () => setEditMode(true),\n                children: [/*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 741,\n                  columnNumber: 23\n                }, this), \" Edit\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 740,\n                columnNumber: 21\n              }, this), editMode && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit-btn save\",\n                onClick: handleSaveFile,\n                children: [/*#__PURE__*/_jsxDEV(FaSave, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 746,\n                  columnNumber: 23\n                }, this), \" Save\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 15\n          }, this), editMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"file-content-editor\",\n            value: fileContent,\n            onChange: e => setFileContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-content\",\n            children: fileContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 7\n    }, this), showCreateFolder && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create New Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Folder Name\",\n          value: newFolderName,\n          onChange: e => setNewFolderName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCreateFolder,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowCreateFolder(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 9\n    }, this), showCreateFile && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create New File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"File Name\",\n          value: newFileName,\n          onChange: e => setNewFileName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"File Content\",\n          value: newFileContent,\n          onChange: e => setNewFileContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCreateFile,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowCreateFile(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 9\n    }, this), itemToRename && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: ((_files$find = files.find(item => item.name === itemToRename)) === null || _files$find === void 0 ? void 0 : _files$find.type) === 'directory' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FaFolder, {\n              className: \"modal-icon folder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 21\n            }, this), \" Rename Folder\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FaFile, {\n              className: \"modal-icon file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 21\n            }, this), \" Rename File\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Current Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 817,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"current-name\",\n              children: itemToRename\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 818,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"New Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 821,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newItemName,\n              onChange: e => setNewItemName(e.target.value),\n              placeholder: \"Enter new name\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 822,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRenameItem,\n            disabled: !newItemName.trim() || newItemName === itemToRename,\n            children: \"Rename\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setItemToRename(null);\n              setNewItemName('');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terminal-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Terminal, {\n        currentPath: currentDir,\n        onCommandExecuted: fetchFiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"watermark\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"watermark-team\",\n        children: \"Team Eclipse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"watermark-members\",\n        children: \"Priyanshi \\u2022 Aditya \\u2022 Vivek\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FileExplorer, \"DZAuuCCXet/RZbIDLNgJKXs6ep0=\", false, function () {\n  return [useNavigate];\n});\n_c = FileExplorer;\nexport default FileExplorer;\nvar _c;\n$RefreshReg$(_c, \"FileExplorer\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","fileSystemService","authService","FaFolder","FaFile","FaArrowUp","FaTrash","FaEdit","FaPen","FaSave","FaMicrophone","FaCheck","FaSun","FaMoon","FaTerminal","Terminal","jsxDEV","_jsxDEV","Fragment","_Fragment","FileExplorer","_s","_files$find","files","setFiles","currentDir","setCurrentDir","loading","setLoading","error","setError","showCreateFolder","setShowCreateFolder","showCreateFile","setShowCreateFile","newFolderName","setNewFolderName","newFileName","setNewFileName","newFileContent","setNewFileContent","selectedFile","setSelectedFile","fileContent","setFileContent","editMode","setEditMode","voiceActive","setVoiceActive","voiceText","setVoiceText","recognitionInterval","setRecognitionInterval","successNotification","setSuccessNotification","darkMode","setDarkMode","itemToRename","setItemToRename","newItemName","setNewItemName","showTerminal","setShowTerminal","navigate","handleLogout","console","log","logout","window","location","href","err","fetchFiles","timeoutId","setTimeout","dirResponse","getCurrentDirectory","data","warn","response","listFiles","clearTimeout","items","parsedData","JSON","parse","parseErr","_err$response","_err$response2","message","status","isAuthenticated","savedTheme","localStorage","getItem","document","body","classList","add","hasShownWelcome","sessionStorage","setItem","handleStartVoiceCommand","stopVoiceCommand","clearInterval","startVoiceCommand","interval","setInterval","voiceStatusResponse","getVoiceStatus","text","currentStatus","stringify","startsWith","actionType","itemName","displayMessage","replace","renameParts","split","length","includes","completed","handleNavigate","path","changeDirectory","_err$response3","handleNavigateUp","moveUpDirectory","_err$response4","handleCreateFolder","trim","createDirectory","_err$response5","handleCreateFile","createFile","_err$response6","handleDeleteItem","name","isDirectory","deleteDirectory","deleteFile","_err$response7","handleFileClick","fileName","readFile","_err$response8","handleSaveFile","editFile","_err$response9","toggleDarkMode","prevMode","newMode","remove","toggleTerminal","terminalWrapper","querySelector","style","display","processVoiceCommandStatus","successNotificationTimeout","notificationElement","testNotification","handleRenameItem","renameItem","_err$response10","children","className","_jsxFileName","lineNumber","columnNumber","onClick","title","map","file","type","e","stopPropagation","value","onChange","target","placeholder","find","item","autoFocus","disabled","currentPath","onCommandExecuted","_c","$RefreshReg$"],"sources":["C:/Users/Shalini Kushwaha/FileSystemSimulator/frontend/src/components/FileExplorer.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { fileSystemService, authService } from '../api';\r\nimport { FaFolder, FaFile, FaArrowUp, FaTrash, FaEdit, FaPen, FaSave, FaMicrophone, FaCheck, FaSun, FaMoon, FaTerminal } from 'react-icons/fa';\r\nimport './FileExplorer.css';\r\nimport Terminal from './Terminal';\r\n\r\nconst FileExplorer = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [currentDir, setCurrentDir] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [showCreateFolder, setShowCreateFolder] = useState(false);\r\n  const [showCreateFile, setShowCreateFile] = useState(false);\r\n  const [newFolderName, setNewFolderName] = useState('');\r\n  const [newFileName, setNewFileName] = useState('');\r\n  const [newFileContent, setNewFileContent] = useState('');\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [fileContent, setFileContent] = useState('');\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [voiceActive, setVoiceActive] = useState(false);\r\n  const [voiceText, setVoiceText] = useState('');\r\n  const [recognitionInterval, setRecognitionInterval] = useState(null);\r\n  const [successNotification, setSuccessNotification] = useState(null);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [itemToRename, setItemToRename] = useState(null);\r\n  const [newItemName, setNewItemName] = useState('');\r\n  const [showTerminal, setShowTerminal] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = () => {\r\n    try {\r\n      console.log('Logging out...');\r\n      // First clear the auth data\r\n      authService.logout();\r\n      console.log('Auth data cleared');\r\n      \r\n      // Force navigation to login page and reload to reset state\r\n      console.log('Redirecting to login page');\r\n      window.location.href = '/';\r\n    } catch (err) {\r\n      console.error('Logout error:', err);\r\n      // Fallback navigation\r\n      navigate('/');\r\n    }\r\n  };\r\n\r\n  const fetchFiles = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      \r\n      // Set a timeout to prevent being stuck in loading state forever\r\n      const timeoutId = setTimeout(() => {\r\n        console.log('Fetch files timeout reached, forcing loading to false');\r\n        setLoading(false);\r\n        setError('Request timed out. Please try again.');\r\n      }, 10000); // 10 second timeout\r\n      \r\n      // Fetch current directory first\r\n      console.log('Fetching current directory...');\r\n      const dirResponse = await fileSystemService.getCurrentDirectory();\r\n      console.log('Current directory response:', dirResponse);\r\n      \r\n      if (dirResponse.data) {\r\n        setCurrentDir(dirResponse.data);\r\n        console.log('Current directory set to:', dirResponse.data);\r\n      } else {\r\n        console.warn('Unexpected current directory response format:', dirResponse);\r\n      }\r\n      \r\n      // Then fetch files in that directory\r\n      console.log('Fetching files in directory...');\r\n      const response = await fileSystemService.listFiles();\r\n      console.log('List files raw response:', response);\r\n      \r\n      // Clear the timeout since we got a response\r\n      clearTimeout(timeoutId);\r\n      \r\n      // Check if the response has an items property\r\n      if (response.data && response.data.items) {\r\n        console.log('Files list received:', response.data.items);\r\n        setFiles(response.data.items);\r\n      } else {\r\n        // Try to parse the response if it's a string\r\n        try {\r\n          if (typeof response.data === 'string') {\r\n            const parsedData = JSON.parse(response.data);\r\n            if (parsedData.items) {\r\n              console.log('Files list parsed from string:', parsedData.items);\r\n              setFiles(parsedData.items);\r\n              return;\r\n            }\r\n          }\r\n        } catch (parseErr) {\r\n          console.error('Failed to parse response data:', parseErr);\r\n        }\r\n        \r\n        // Handle the case when the response doesn't have the expected format\r\n        console.error('Unexpected response format:', response.data);\r\n        setFiles([]);\r\n        setError('Unexpected response format from server');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching files:', err);\r\n      setError('Failed to load files: ' + (err.response?.data || err.message));\r\n      if (err.response?.status === 401) {\r\n        // Handle unauthorized by redirecting to login\r\n        console.warn('Unauthorized access detected, redirecting to login');\r\n        authService.logout();\r\n        navigate('/');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    // Check if user is authenticated before trying to fetch files\r\n    if (!authService.isAuthenticated()) {\r\n      console.log('User not authenticated, redirecting to login');\r\n      navigate('/');\r\n      return;\r\n    }\r\n    \r\n    fetchFiles();\r\n    \r\n    // Set up initial theme based on local storage\r\n    const savedTheme = localStorage.getItem('darkMode');\r\n    if (savedTheme === 'true') {\r\n      setDarkMode(true);\r\n      document.body.classList.add('dark-mode');\r\n    }\r\n  }, [fetchFiles, navigate]);\r\n\r\n  // Separate useEffect for welcome notification to prevent it from showing on every render\r\n  useEffect(() => {\r\n    // Show welcome notification only on initial load\r\n    const hasShownWelcome = sessionStorage.getItem('welcomeShown');\r\n    if (!hasShownWelcome) {\r\n      setTimeout(() => {\r\n        setSuccessNotification(\"Welcome to File System Simulator!\");\r\n        setTimeout(() => setSuccessNotification(null), 5000);\r\n        sessionStorage.setItem('welcomeShown', 'true');\r\n      }, 1000);\r\n    }\r\n  }, []);\r\n\r\n  const handleStartVoiceCommand = async () => {\r\n    try {\r\n      setError('');\r\n      \r\n      // If already listening, stop the voice command\r\n      if (voiceActive) {\r\n        console.log('Stopping voice command...');\r\n        \r\n        // Call the stop endpoint\r\n        try {\r\n          await fileSystemService.stopVoiceCommand();\r\n          console.log('Voice command stopped via API');\r\n        } catch (err) {\r\n          console.error('Error stopping voice command:', err);\r\n        }\r\n        \r\n        setVoiceActive(false);\r\n        setVoiceText('Voice command stopped');\r\n        \r\n        // Clear any existing polling interval\r\n        if (recognitionInterval) {\r\n          console.log('Clearing polling interval');\r\n          clearInterval(recognitionInterval);\r\n          setRecognitionInterval(null);\r\n        }\r\n        \r\n        // Clear voice text after a delay\r\n        setTimeout(() => {\r\n          setVoiceText('');\r\n        }, 2000);\r\n        \r\n        return;\r\n      }\r\n      \r\n      // Start new voice command session\r\n      setVoiceActive(true);\r\n      setVoiceText('Listening...');\r\n      \r\n      // Start voice command on backend\r\n      console.log('Initiating voice command on backend...');\r\n      const response = await fileSystemService.startVoiceCommand();\r\n      console.log('Voice command response:', response);\r\n      \r\n      // Poll for voice recognition updates\r\n      console.log('Setting up polling for voice status updates...');\r\n      const interval = setInterval(async () => {\r\n        try {\r\n          // Only continue polling if still in voice active mode\r\n          if (!voiceActive) {\r\n            console.log('Voice recognition no longer active, stopping polling');\r\n            clearInterval(interval);\r\n            setRecognitionInterval(null);\r\n            return;\r\n          }\r\n          \r\n          console.log('Polling for voice status...');\r\n          const voiceStatusResponse = await fileSystemService.getVoiceStatus();\r\n          console.log('Voice status response:', voiceStatusResponse.data);\r\n          \r\n          if (voiceStatusResponse.data && voiceStatusResponse.data.text) {\r\n            const currentStatus = voiceStatusResponse.data.text;\r\n            \r\n            // Debug the exact status received\r\n            console.log('RECEIVED STATUS TEXT:', JSON.stringify(currentStatus));\r\n            \r\n            // PRIORITY 1: Check for special formatted messages first (exact match format)\r\n            if (currentStatus.startsWith('FOLDER_CREATED_') || \r\n                currentStatus.startsWith('FILE_CREATED_') ||\r\n                currentStatus.startsWith('RENAME_SUCCESS_')) {\r\n              \r\n              let actionType = 'unknown';\r\n              let itemName = '';\r\n              let displayMessage = '';\r\n              \r\n              if (currentStatus.startsWith('FOLDER_CREATED_')) {\r\n                actionType = 'folder-create';\r\n                itemName = currentStatus.replace('FOLDER_CREATED_', '');\r\n                displayMessage = `Folder \"${itemName}\" created successfully!`;\r\n              } else if (currentStatus.startsWith('FILE_CREATED_')) {\r\n                actionType = 'file-create';\r\n                itemName = currentStatus.replace('FILE_CREATED_', '');\r\n                displayMessage = `File \"${itemName}\" created successfully!`;\r\n              } else if (currentStatus.startsWith('RENAME_SUCCESS_')) {\r\n                actionType = 'rename';\r\n                // Format is RENAME_SUCCESS_oldname_TO_newname\r\n                const renameParts = currentStatus.replace('RENAME_SUCCESS_', '').split('_TO_');\r\n                if (renameParts.length === 2) {\r\n                  displayMessage = `\"${renameParts[0]}\" renamed to \"${renameParts[1]}\" successfully!`;\r\n                } else {\r\n                  displayMessage = \"Item renamed successfully!\";\r\n                }\r\n              }\r\n              \r\n              // Use actionType for analytics or logging purposes\r\n              console.log('SUCCESS DETECTED - SPECIAL FORMAT:', displayMessage, 'Action type:', actionType);\r\n              \r\n              // Force refresh files\r\n              await fetchFiles();\r\n              \r\n              // Set success notification with formatted message\r\n              setSuccessNotification(displayMessage);\r\n              setTimeout(() => setSuccessNotification(null), 6000);\r\n            }\r\n            // PRIORITY 2: Standard format success messages\r\n            else if (currentStatus.includes('SUCCESS') || \r\n                currentStatus.includes('success') ||\r\n                currentStatus.includes('Folder created') || \r\n                currentStatus.includes('File created')) {\r\n              \r\n              console.log('SUCCESS DETECTED - STANDARD FORMAT:', currentStatus);\r\n              \r\n              // Force refresh files\r\n              await fetchFiles();\r\n              \r\n              // Set success notification with the exact message\r\n              setSuccessNotification(currentStatus);\r\n              setTimeout(() => setSuccessNotification(null), 6000);\r\n            }\r\n            \r\n            // Always update the voice text display\r\n            setVoiceText(currentStatus);\r\n            \r\n            // If the command is completed, restart voice recognition\r\n            if (voiceStatusResponse.data.completed) {\r\n              console.log('Voice command completed, starting a new listening session');\r\n              await fileSystemService.startVoiceCommand();\r\n            }\r\n          }\r\n        } catch (err) {\r\n          console.error('Error getting voice status:', err);\r\n        }\r\n      }, 300); // Poll frequently for better responsiveness\r\n      \r\n      setRecognitionInterval(interval);\r\n      \r\n    } catch (err) {\r\n      console.error('Failed to start voice command:', err);\r\n      setError('Failed to start voice command');\r\n      setVoiceActive(false);\r\n      setVoiceText('');\r\n    }\r\n  };\r\n\r\n  // Clean up interval on component unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (recognitionInterval) {\r\n        clearInterval(recognitionInterval);\r\n      }\r\n    };\r\n  }, [recognitionInterval]);\r\n\r\n  const handleNavigate = async (path) => {\r\n    try {\r\n      console.log('Navigating to:', path);\r\n      const response = await fileSystemService.changeDirectory(path);\r\n      console.log('Navigation response:', response);\r\n      \r\n      // Reset file state\r\n      setSelectedFile(null);\r\n      setFileContent('');\r\n      setEditMode(false);\r\n      \r\n      // Refresh the file list\r\n      await fetchFiles();\r\n    } catch (err) {\r\n      console.error(`Failed to navigate to ${path}:`, err);\r\n      setError(`Failed to navigate to ${path}: ${err.response?.data || err.message}`);\r\n    }\r\n  };\r\n\r\n  const handleNavigateUp = async () => {\r\n    try {\r\n      console.log('Navigating up...');\r\n      const response = await fileSystemService.moveUpDirectory();\r\n      console.log('Navigate up response:', response);\r\n      \r\n      // Reset file state\r\n      setSelectedFile(null);\r\n      setFileContent('');\r\n      setEditMode(false);\r\n      \r\n      // Refresh the file list\r\n      await fetchFiles();\r\n    } catch (err) {\r\n      console.error('Failed to navigate up:', err);\r\n      setError(`Failed to navigate up: ${err.response?.data || err.message}`);\r\n    }\r\n  };\r\n\r\n  const handleCreateFolder = async () => {\r\n    if (!newFolderName.trim()) {\r\n      setError('Folder name cannot be empty');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setError('');\r\n      console.log('Creating folder:', newFolderName);\r\n      const response = await fileSystemService.createDirectory(newFolderName);\r\n      console.log('Create folder response:', response);\r\n      setNewFolderName('');\r\n      setShowCreateFolder(false);\r\n      \r\n      // Refresh the file list\r\n      await fetchFiles();\r\n    } catch (err) {\r\n      console.error('Failed to create folder:', err);\r\n      setError('Failed to create folder: ' + (err.response?.data || err.message));\r\n    }\r\n  };\r\n\r\n  const handleCreateFile = async () => {\r\n    if (!newFileName.trim()) {\r\n      setError('File name cannot be empty');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setError('');\r\n      console.log('Creating file:', newFileName, 'with content:', newFileContent);\r\n      const response = await fileSystemService.createFile(newFileName, newFileContent);\r\n      console.log('Create file response:', response);\r\n      setNewFileName('');\r\n      setNewFileContent('');\r\n      setShowCreateFile(false);\r\n      \r\n      // Refresh the file list\r\n      await fetchFiles();\r\n    } catch (err) {\r\n      console.error('Failed to create file:', err);\r\n      setError('Failed to create file: ' + (err.response?.data || err.message));\r\n    }\r\n  };\r\n\r\n  const handleDeleteItem = async (name, isDirectory) => {\r\n    try {\r\n      if (isDirectory) {\r\n        console.log('Deleting directory:', name);\r\n        const response = await fileSystemService.deleteDirectory(name);\r\n        console.log('Delete directory response:', response);\r\n      } else {\r\n        console.log('Deleting file:', name);\r\n        const response = await fileSystemService.deleteFile(name);\r\n        console.log('Delete file response:', response);\r\n      }\r\n      \r\n      // Refresh the file list\r\n      await fetchFiles();\r\n      \r\n      if (selectedFile === name) {\r\n        setSelectedFile(null);\r\n        setFileContent('');\r\n        setEditMode(false);\r\n      }\r\n    } catch (err) {\r\n      console.error(`Failed to delete ${isDirectory ? 'folder' : 'file'}:`, err);\r\n      setError(`Failed to delete ${isDirectory ? 'folder' : 'file'}: ${err.response?.data || err.message}`);\r\n    }\r\n  };\r\n\r\n  const handleFileClick = async (fileName) => {\r\n    try {\r\n      setError('');\r\n      console.log('Reading file:', fileName);\r\n      setSelectedFile(fileName);\r\n      setEditMode(false);\r\n      \r\n      const response = await fileSystemService.readFile(fileName);\r\n      console.log('Read file response status:', response.status);\r\n      setFileContent(response.data);\r\n    } catch (err) {\r\n      console.error('Failed to read file:', err);\r\n      setError('Failed to read file: ' + (err.response?.data || err.message));\r\n      setFileContent('');\r\n    }\r\n  };\r\n\r\n  const handleSaveFile = async () => {\r\n    try {\r\n      setError('');\r\n      console.log('Saving file:', selectedFile);\r\n      const response = await fileSystemService.editFile(selectedFile, fileContent);\r\n      console.log('Save file response:', response);\r\n      setEditMode(false);\r\n      \r\n      // Optionally refresh the file list after saving\r\n      await fetchFiles();\r\n    } catch (err) {\r\n      console.error('Failed to save file:', err);\r\n      setError('Failed to save file: ' + (err.response?.data || err.message));\r\n    }\r\n  };\r\n\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(prevMode => {\r\n      const newMode = !prevMode;\r\n      localStorage.setItem('darkMode', newMode);\r\n      \r\n      if (newMode) {\r\n        document.body.classList.add('dark-mode');\r\n      } else {\r\n        document.body.classList.remove('dark-mode');\r\n      }\r\n      \r\n      return newMode;\r\n    });\r\n  };\r\n\r\n  const toggleTerminal = () => {\r\n    setShowTerminal(!showTerminal);\r\n    // If terminal is being shown, ensure it's visible\r\n    if (!showTerminal) {\r\n      const terminalWrapper = document.querySelector('.terminal-wrapper');\r\n      if (terminalWrapper) {\r\n        terminalWrapper.style.display = 'block';\r\n      }\r\n    }\r\n  };\r\n\r\n  // Enhanced function to specifically handle voice commands\r\n  // This function is defined for future expansion of voice command features\r\n  // and can be called from handleStartVoiceCommand as needed\r\n  // eslint-disable-next-line no-unused-vars\r\n  const processVoiceCommandStatus = async (status) => {\r\n    console.log('Processing voice command status:', status);\r\n    \r\n    // Explicit check for SUCCESS messages (case insensitive)\r\n    if (status.includes('SUCCESS') || status.includes('success')) {\r\n      console.log('SUCCESS DETECTED - Setting notification:', status);\r\n      setSuccessNotification(status);\r\n      setTimeout(() => setSuccessNotification(null), 8000); // longer display\r\n      await fetchFiles();\r\n      return true;\r\n    }\r\n    \r\n    // Check for creation/action commands\r\n    if (status.includes('created') || \r\n        status.includes('deleted') || \r\n        status.includes('opened') ||\r\n        status.includes('navigated')) {\r\n      \r\n      console.log('ACTION DETECTED IN VOICE COMMAND:', status);\r\n      \r\n      // Show success notification\r\n      setSuccessNotification(status);\r\n      setTimeout(() => setSuccessNotification(null), 5000);\r\n      \r\n      // Refresh files to show changes\r\n      await fetchFiles();\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Add a more robust useEffect to handle success notifications\r\n  useEffect(() => {\r\n    if (successNotification) {\r\n      console.log('SUCCESS NOTIFICATION SET TO:', successNotification);\r\n      \r\n      // Keep only one notification active at a time - clear any existing timeouts\r\n      if (window.successNotificationTimeout) {\r\n        console.log('Clearing existing timeout');\r\n        clearTimeout(window.successNotificationTimeout);\r\n      }\r\n      \r\n      // Store the new timeout for later reference\r\n      window.successNotificationTimeout = setTimeout(() => {\r\n        console.log('Success notification timeout fired, clearing notification');\r\n        setSuccessNotification(null);\r\n      }, 8000);  // Increased to 8 seconds for better visibility\r\n      \r\n      // Check if the notification element exists\r\n      setTimeout(() => {\r\n        const notificationElement = document.querySelector('.success-notification');\r\n        if (notificationElement) {\r\n          console.log('Success notification found in DOM:', notificationElement);\r\n        } else {\r\n          console.error('SUCCESS NOTIFICATION NOT FOUND IN DOM!');\r\n        }\r\n      }, 100);  // Short delay to check after render\r\n    } else {\r\n      console.log('Success notification cleared');\r\n    }\r\n    \r\n    // Cleanup on unmount\r\n    return () => {\r\n      if (window.successNotificationTimeout) {\r\n        clearTimeout(window.successNotificationTimeout);\r\n      }\r\n    };\r\n  }, [successNotification]);\r\n\r\n  // Set notification function for testing from console\r\n  useEffect(() => {\r\n    // Expose a function to test setting notifications from the console\r\n    window.testNotification = (message) => {\r\n      console.log(`Setting test notification: ${message}`);\r\n      setSuccessNotification(message);\r\n      setTimeout(() => setSuccessNotification(null), 5000);\r\n    };\r\n    \r\n    return () => {\r\n      delete window.testNotification;\r\n    };\r\n  }, []);\r\n\r\n  const handleRenameItem = async () => {\r\n    if (!itemToRename || !newItemName.trim()) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setError('');\r\n      console.log(`Renaming ${itemToRename} to ${newItemName}`);\r\n      \r\n      // Call the API to rename the item\r\n      const response = await fileSystemService.renameItem(itemToRename, newItemName);\r\n      console.log('Rename response:', response);\r\n      \r\n      // Set success notification\r\n      setSuccessNotification(`Renamed ${itemToRename} to ${newItemName} successfully`);\r\n      setTimeout(() => setSuccessNotification(null), 5000);\r\n      \r\n      // Reset state\r\n      setItemToRename(null);\r\n      setNewItemName('');\r\n      \r\n      // Refresh the file list\r\n      await fetchFiles();\r\n    } catch (err) {\r\n      console.error('Error renaming item:', err);\r\n      setError('Failed to rename item: ' + (err.response?.data || err.message));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Success notification positioned outside the main container for maximum visibility */}\r\n      {successNotification && (\r\n        <div className=\"success-notification\">\r\n          <FaCheck /> {successNotification}\r\n        </div>\r\n      )}\r\n      \r\n      <div className={`file-explorer ${darkMode ? 'dark-mode' : ''}`}>\r\n        <div className=\"explorer-header\">\r\n          <h2>File System Explorer</h2>\r\n          <div className=\"header-actions\">\r\n            <button \r\n              className=\"theme-toggle-btn\" \r\n              onClick={toggleDarkMode} \r\n              title={darkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"}\r\n            >\r\n              {darkMode ? <FaSun /> : <FaMoon />}\r\n            </button>\r\n            \r\n            <button \r\n              className=\"action-btn\"\r\n              onClick={toggleTerminal}\r\n              title=\"Open Terminal\"\r\n            >\r\n              <FaTerminal /> Terminal\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleStartVoiceCommand} \r\n              className={`action-btn ${voiceActive ? 'active' : ''}`}\r\n              title={voiceActive ? \"Stop Voice Command\" : \"Start Voice Command\"}\r\n            >\r\n              <FaMicrophone /> {voiceActive ? 'Stop' : 'Voice'}\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleLogout} \r\n              className=\"action-btn\"\r\n              title=\"Logout\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        \r\n        {voiceText && (\r\n          <div className=\"voice-text-container\">\r\n            <div className={`voice-text ${\r\n              voiceText.includes(\"Listening\") ? \"listening\" :\r\n              voiceText.includes(\"Recognized:\") ? \"recognized\" :\r\n              voiceText.includes(\"ERROR\") || voiceText.includes(\"Failed\") || voiceText.includes(\"Error\") ? \"error\" :\r\n              voiceText.includes(\"SUCCESS\") || voiceText.includes(\"created\") || voiceText.includes(\"Navigated\") || voiceText.includes(\"Deleted\") ? \"success\" :\r\n              voiceText.includes(\"Processing\") ? \"processing\" :\r\n              \"\"\r\n            }`}>\r\n              <FaMicrophone className=\"voice-icon\" /> {voiceText}\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"path-navigation\">\r\n          <div className=\"current-path\">\r\n            <strong>Current Path:</strong> {currentDir}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"explorer-container\">\r\n          <div className=\"file-list\">\r\n            <div className=\"actions\">\r\n              <button className=\"action-btn\" onClick={() => handleNavigateUp()}>\r\n                <FaArrowUp /> Up\r\n              </button>\r\n              <button className=\"action-btn\" onClick={() => setShowCreateFolder(true)}>\r\n                <FaFolder /> New Folder\r\n              </button>\r\n              <button className=\"action-btn\" onClick={() => setShowCreateFile(true)}>\r\n                <FaFile /> New File\r\n              </button>\r\n            </div>\r\n\r\n            {loading ? (\r\n              <div className=\"loading\">Loading...</div>\r\n            ) : error ? (\r\n              <div className=\"error-message\">{error}</div>\r\n            ) : files.length === 0 ? (\r\n              <div className=\"empty-message\">\r\n                <div className=\"empty-illustration\">\r\n                  <FaFolder />\r\n                </div>\r\n                <h3 className=\"empty-title\">This folder is empty</h3>\r\n                <p className=\"empty-subtitle\">\r\n                  Start by creating a new file or folder to organize your content.\r\n                  You can also use voice commands or the terminal for advanced operations.\r\n                </p>\r\n                <div className=\"empty-actions\">\r\n                  <button className=\"empty-action-btn\" onClick={() => setShowCreateFolder(true)}>\r\n                    <FaFolder /> New Folder\r\n                  </button>\r\n                  <button className=\"empty-action-btn\" onClick={() => setShowCreateFile(true)}>\r\n                    <FaFile /> New File\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <ul>\r\n                {files.map((file) => (\r\n                  <li\r\n                    key={file.name}\r\n                    className={`file-item ${selectedFile === file.name ? 'selected' : ''}`}\r\n                    onClick={() => file.type === 'directory' ? handleNavigate(file.name) : handleFileClick(file.name)}\r\n                  >\r\n                    <span className=\"file-name\">\r\n                      {file.type === 'directory' ? (\r\n                        <FaFolder className=\"icon folder\" />\r\n                      ) : (\r\n                        <FaFile className=\"icon file\" />\r\n                      )}\r\n                      {file.name}\r\n                    </span>\r\n                    <div className=\"file-actions\">\r\n                      <button\r\n                        className=\"file-action-btn rename\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          setItemToRename(file.name);\r\n                        }}\r\n                      >\r\n                        <FaPen />\r\n                      </button>\r\n                      <button\r\n                        className=\"file-action-btn delete\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleDeleteItem(file.name, file.type === 'directory');\r\n                        }}\r\n                      >\r\n                        <FaTrash />\r\n                      </button>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n          \r\n          {selectedFile && (\r\n            <div className=\"file-preview\">\r\n              <h3>\r\n                {selectedFile}\r\n                <div className=\"file-preview-actions\">\r\n                  {!editMode && (\r\n                    <button className=\"edit-btn\" onClick={() => setEditMode(true)}>\r\n                      <FaEdit /> Edit\r\n                    </button>\r\n                  )}\r\n                  {editMode && (\r\n                    <button className=\"edit-btn save\" onClick={handleSaveFile}>\r\n                      <FaSave /> Save\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </h3>\r\n              {editMode ? (\r\n                <textarea\r\n                  className=\"file-content-editor\"\r\n                  value={fileContent}\r\n                  onChange={(e) => setFileContent(e.target.value)}\r\n                />\r\n              ) : (\r\n                <div className=\"file-content\">{fileContent}</div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {showCreateFolder && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h3>Create New Folder</h3>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Folder Name\"\r\n              value={newFolderName}\r\n              onChange={(e) => setNewFolderName(e.target.value)}\r\n            />\r\n            <div className=\"modal-actions\">\r\n              <button onClick={handleCreateFolder}>Create</button>\r\n              <button onClick={() => setShowCreateFolder(false)}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {showCreateFile && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h3>Create New File</h3>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"File Name\"\r\n              value={newFileName}\r\n              onChange={(e) => setNewFileName(e.target.value)}\r\n            />\r\n            <textarea\r\n              placeholder=\"File Content\"\r\n              value={newFileContent}\r\n              onChange={(e) => setNewFileContent(e.target.value)}\r\n            />\r\n            <div className=\"modal-actions\">\r\n              <button onClick={handleCreateFile}>Create</button>\r\n              <button onClick={() => setShowCreateFile(false)}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {itemToRename && (\r\n        <div className=\"modal-backdrop\">\r\n          <div className=\"modal-content\">\r\n            <h3>\r\n              {files.find(item => item.name === itemToRename)?.type === 'directory' \r\n                ? <><FaFolder className=\"modal-icon folder\" /> Rename Folder</>\r\n                : <><FaFile className=\"modal-icon file\" /> Rename File</>\r\n              }\r\n            </h3>\r\n            <div className=\"modal-form\">\r\n              <div className=\"form-group\">\r\n                <label>Current Name:</label>\r\n                <div className=\"current-name\">{itemToRename}</div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>New Name:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={newItemName}\r\n                  onChange={(e) => setNewItemName(e.target.value)}\r\n                  placeholder=\"Enter new name\"\r\n                  autoFocus\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"modal-actions\">\r\n              <button \r\n                onClick={handleRenameItem}\r\n                disabled={!newItemName.trim() || newItemName === itemToRename}\r\n              >\r\n                Rename\r\n              </button>\r\n              <button onClick={() => {\r\n                setItemToRename(null);\r\n                setNewItemName('');\r\n              }}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"terminal-wrapper\">\r\n        <Terminal currentPath={currentDir} onCommandExecuted={fetchFiles} />\r\n      </div>\r\n\r\n      <div className=\"watermark\">\r\n        <div className=\"watermark-team\">Team Eclipse</div>\r\n        <div className=\"watermark-members\">Priyanshi • Aditya • Vivek</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FileExplorer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}